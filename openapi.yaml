openapi: 3.0.3
info:
  title: Team-Dev-Api-Spec
  description: |-
  version: 1.0.0

servers:
  - url: http://localhost:4000
tags:
  - name: user
  - name: post
  - name: cohort
  - name: log
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: Create new user
      operationId: createUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
       '201':
        
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUser'
    get:
      tags:
        - user
      summary: Get all users by first name if provided
      description: ''
      operationId: getAllUsers
      security:
        - bearerAuth: []
      parameters:
        - name: first_name
          in: query
          description: Search all users by first name if provided
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      tags:
        - user
      summary: Localhost Login
      description: ''
      operationId: loginUser
      requestBody:
        description: User login information 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/loginRes'
                
        '400':
          description: Invalid username/password supplied
  
  /user/{id}:
    get:
      tags:
        - user
      summary: Get user by user id
      description: ''
      operationId: getUserByID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - user
      summary: Update a cohort
      description: Creates list of users with given input array
      operationId: asd
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      requestBody:
        description: Cohort Id to add user to
        content:
          application/json:
            schema:
              type: object
              properties:
                cohort_id:
                  type: integer
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CohortAddUser'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /log:
    post:
      tags:
       - log
      summary: Create log
      description: This can only be done by authorized user.
      operationId: createLog
      security:
        - bearerAuth: []
      requestBody:
        description: Created log object
        content:
         application/json:
          schema:
            type: object
            properties:
              date: 
                type: string
              cohort_id:
                type: integer
              lines:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /post:
    post:
      tags:
        - post
      summary: Create post
      description: This can only be done by the logged in user.
      operationId: createPost
      security:
        - bearerAuth: []
      requestBody:
        description: Created post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - post
      summary: Get all posts
      description: get all posts
      operationId: getPosts
      security:
        - bearerAuth: []
      responses: 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /post/{id}/like:
    post:
      tags:
        - post
      summary: Like a post
      description: This can only be done by the logged in user.
      operationId: likePost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The id of the post that is being liked.'
          required: true
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikePost'
        404:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    delete:
      tags:
        - post
      summary: Delete a post like
      description: This can only be done by the logged in user.
      operationId: deleteLike
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The id of the post that is being liked.'
          required: true
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikePost'
        404:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /post/{id}/:
    patch:
      tags:
       - post
      summary: Edit a post 
      description: edit post by id
      operationId: editPost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The id of the post that is being edited.'
          required: true
          schema:
            type: string
      responses:
       '201':
         description: successful
       '401':
         description: Unuthorized
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
       '400':
         description: bad request
         content:
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
    delete:
      tags:
        - post
      summary: Delete a post by id
      description: delete post by id
      operationId: deletePost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'get post by its id'
          required: true
          schema:
            type: string
      responses:
        '201':
         description: successful
         content:
           application/json:
            schema:
             $ref: '#/components/schemas/DeletePost'
        '401':
         description: authentication failed
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
        '404':
         description: not found 
         content:
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
        '500':
          description: error creating comment
          content:
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
  /post/{id}/comment:    
    post:
      tags:
        - comment
      summary: Comment a post
      description: comment a post by id
      operationId: commentPost
      security:
        - bearerAuth: []
      requestBody:
            description: Created post object
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    content:
                      type: string
                    parentId:
                      type: integer
      parameters:
        - name: id
          in: path
          description: 'get post by its id'
          required: true
          schema:
            type: integer
      responses:
        201:
          description: successful
          content:
            application/json:
             schema:
               $ref: '#/components/schemas/Comment'
        '401':
         description: Unuthorized
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
        '400':
         description: bad request
         content:
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
              
  /post/{postId}/comment/{commentId}:
   delete:
     tags:
      - comment
     summary: Delete a comment by id
     description: by a logged in user who owns the post or the comment, or with the role of TEACHER or ADMIN
     operationId: deleteComment
     security:
        - bearerAuth: []
     parameters:
      - name: postId
        description: 'id of the post which has the comment to delete'
        in: path
        required: true
        schema:
          type: integer 
      - name: commentId
        description: 'id of the comment to delete'
        required: true
        in: path
        schema:
         type: integer
     responses:
        201:
         description: successful
         content:
          application/json:
            schema:
             $ref: '#/components/schemas/DeletePost'
        '401':
         description: Unuthorized
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
   patch:
     tags:
      - comment
     summary: Edit a comment by id
     description: by a logged in user who owns the comment
     operationId: editComment
     requestBody:
        description: content to edit
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/editComment'
     parameters:
      - name: postId
        description: 'id of the post which has the comment to delete'
        in: path
        required: true
        schema:
          type: integer 
      - name: commentId
        description: 'id of the comment to delete'
        required: true
        in: path
        schema:
         type: integer
     security:
        - bearerAuth: []
     responses:
        201:
         description: successful
         content:
          application/json:
            schema:
             $ref: '#/components/schemas/Comment'
        '400':
         description: missing content
         content:
            application/json:
             schema:
              $ref: '#/components/schemas/Error'
        '401':
         description: Unuthorized
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
      
      
              
  /post/{postId}/comment/{commentId}/like:
   post:
    tags:
     - comment
    summary: Like a comment by id
    description: This can be done by any logged in user.
    operationId: likeComment
    security:
      - bearerAuth: []
    parameters:
     - name: postId
       in: path
       required: true
       schema:
         type: integer
     - name: commentId
       in: path
       required: true
       schema: 
         type: integer
    responses:
      201:
        description: successful
        content: 
          application/json:
           schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
               properties:
                like:
                 properties:
                  userId:
                   type: integer
                   example: 1
                  commentId:
                   type: integer
                   example: 1
                  commentLikes:
                   type: integer
                   example: 2
      '401':
         description: Unuthorized
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
      '500':
        description: Internal server error
        content:
          application/json:
            schema:
               $ref: '#/components/schemas/Error'
    
   delete:
      tags:
       - comment
      summary: Delete a comment like 
      description: This can be done by a logged in user who liked a particular comment
      operationId: deleteCommentLike
      security:
        - bearerAuth: []
      parameters:
       - name: postId
         in: path
         required: true
         schema:
           type: integer
       - name: commentId
         in: path
         required: true
         schema: 
           type: integer
      responses:
       201:
        description: successful
        content: 
          application/json:
           schema:
            type: object
            properties:
              status:
                type: string
                example: success
              data:
               properties:
                like:
                 properties:
                  userId:
                   type: integer
                   example: 1
                  commentId:
                   type: integer
                   example: 1
       '401':
         description: Unuthorized
         content:
            application/json:
             schema:
               $ref: '#/components/schemas/Error'
       '500':
          description: Internal server error
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/Error'
      
      
               
         
    
  
  /cohort:
    post:
      tags:
        - cohort
      summary: Create cohort
      description: This can only be done by the logged in user with role TEACHER.
      operationId: createCohort
      security:
        - bearerAuth: []
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT 
  schemas:
    Post:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            post:
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
    DeletePost:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            deletedPost:
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
                userId:
                  type: integer
                  format: int64
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
            deletedComments:
              type: object
              properties:
                count:
                  type: integer

    LikePost:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            likes:
              type: array
              items:
                type: object
                properties:
                  userId:
                    type: integer
                    format: int64
                  postId:
                    type: integer
                    format: int64
                  createdAt:
                    type: string
                    format: date-time
                  updatedAt:
                    type: string
                    format: date-time
                  user:
                    type: object
                    properties:
                      email:
                        type: string
                      id:
                        type: integer
                      cohortId:
                        type: integer
                      role:
                        type: string
                      profile:
                        type: object
                        properties:
                          id:
                            type: integer
                          userId:
                            type: integer
                          firstName:
                            type: string
                          lastName:
                            type: string
                          bio:
                            type: string
                          githubUrl:
                            type: string
                          profileImageUrl:
                            type: string 
    Comment:
      type: object
      properties:
        status:
          type: string
        data:
          type: object
          properties:
            post:
              type: object
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
                userId:
                  type: integer
                postId:
                  type: integer
                parentId:
                  type: integer
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
                user:
                  type: object
                  properties:
                    email:
                      type: string
                    id:
                      type: integer
                    cohortId:
                      type: integer
                    role:
                      type: string
                    profile:
                      type: object
                      properties:
                        id:
                          type: integer
                        userId:
                          type: integer
                        firstName:
                          type: string
                        lastName:
                          type: string
                        bio:
                          type: string
                        githubUrl:
                          type: string
                        profileImageUrl:
                          type: string
                          
    editComment:
     type: object
     properties:
      content: 
       type: string
      
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        biography:
          type: string
        github_url:
          type: string
    Posts:
      type: object
      properties:
        status:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              content:
                type: string
              userId:
                type: integer
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              user:
                type: object
                properties:
                  email:
                    type: string
                  id:
                    type: integer
                  cohortId:
                    type: integer
                  role:
                    type: string
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      bio:
                        type: string
                      githubUrl:
                        type: string
                      profileImageUrl:
                        type: string
              likes:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: integer
                      format: int64
                    postId:
                      type: integer
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        email:
                          type: string
                        id:
                          type: integer
                        cohortId:
                          type: integer
                        role:
                          type: string
                        profile:
                          type: object
                          properties:
                            id:
                              type: integer
                            userId:
                              type: integer
                            firstName:
                              type: string
                            lastName:
                              type: string
                            bio:
                              type: string
                            githubUrl:
                              type: string
                            profileImageUrl:
                              type: string
              comments:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    content:
                      type: string
                    userId:
                      type: integer
                      format: int64
                    postId:
                      type: integer
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        email:
                          type: string
                        id:
                          type: integer
                        cohortId:
                          type: integer
                        role:
                          type: string
                        profile:
                          type: object
                          properties:
                            id:
                              type: integer
                            userId:
                              type: integer
                            firstName:
                              type: string
                            lastName:
                              type: string
                            bio:
                              type: string
                            githubUrl:
                              type: string
                            profileImageUrl:
                              type: string
    Cohort:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            cohort:
              properties:
                id:
                  type: integer
                  format: int64
    CohortAddUser:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            user:
              properties:
                cohort_id:
                  type: integer
                  format: int64
    CreatedUser:
          type: object 
          properties: 
            status:
              type: string
              example: success
            data:
             properties:
              user:
               properties:
                 id:
                  type: integer
                 cohort_id:
                  type: integer
                 role:
                  type: string
                 first_name:
                  type: string
                 last_name:
                  type: string
                 email:
                  type: string
                 biography:
                  type: string
                 github_url:
                  type: string
    login:
      type: object 
      properties:
        email:
          type: string 
        password:
          type: string
     
    loginRes:
      type: object 
      properties:
        status: 
          type: string
        data:
         properties:
          token:
           type: string
          user:
           properties:
              id: 
               type: integer
              cohort_id: 
               type: integer 
              role:
               type: string
              first_name:
               type: string
              last_name:
                type: string
              email:
                type: string
              biography:
                type: string
              github_url:
                type: string

    Error:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            error:
              type: string
    Log:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            log:
              properties:
                id:
                  type: integer
                cohort_id:
                  type: integer
                date:
                  type: string
                author:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      content:
                        type: string
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
