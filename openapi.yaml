openapi: 3.0.3
info:
  title: Team-Dev-Api-Spec
  description: |-
  version: 1.0.0

servers:
  - url: team-dev-api
tags:
  - name: user
  - name: post
  - name: cohort
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: This can only be done by the logged in user.
      operationId: createUser
      requestBody:
        description: Created user object
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
  /user/createWithList:
    post:
      tags:
        - user
      summary: Creates list of users with given input array
      description: Creates list of users with given input array
      operationId: createUsersWithListInput
      requestBody:
        content:
          application/json:
            schema:
              type: array
              items:
                $ref: '#/components/schemas/User'
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        default:
          description: successful operation
  /user/login:
    get:
      tags:
        - user
      summary: Logs user into the system
      description: ''
      operationId: loginUser
      parameters:
        - name: username
          in: query
          description: The user name for login
          required: false
          schema:
            type: string
        - name: password
          in: query
          description: The password for login in clear text
          required: false
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          headers:
            X-Rate-Limit:
              description: calls per hour allowed by the user
              schema:
                type: integer
                format: int32
            X-Expires-After:
              description: date in UTC when token expires
              schema:
                type: string
                format: date-time
          content:
            application/xml:
              schema:
                type: string
            application/json:
              schema:
                type: string
        '400':
          description: Invalid username/password supplied
  /user/logout:
    get:
      tags:
        - user
      summary: Logs out current logged in user session
      description: ''
      operationId: logoutUser
      parameters: []
      responses:
        default:
          description: successful operation
  /user/{username}:
    get:
      tags:
        - user
      summary: Get user by user name
      description: ''
      operationId: getUserByName
      parameters:
        - name: username
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'          
            application/xml:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      tags:
        - user
      summary: Update user
      description: This can only be done by the logged in user.
      operationId: updateUser
      parameters:
        - name: username
          in: path
          description: name that need to be deleted
          required: true
          schema:
            type: string
      requestBody:
        description: Update an existent user in the store
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/xml:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        default:
          description: successful operation
    delete:
      tags:
        - user
      summary: Delete user
      description: This can only be done by the logged in user.
      operationId: deleteUser
      parameters:
        - name: username
          in: path
          description: The name that needs to be deleted
          required: true
          schema:
            type: string
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /post:
    post:
      tags:
        - post
      summary: Create post
      description: This can only be done by the logged in user.
      operationId: createPost
      requestBody:
        description: Created post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - post
      summary: gets all posts
      description: get all posts
      operationId: getPosts
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cohort:
    post:
      tags:
        - cohort
      summary: Create cohort
      description: This can only be done by the logged in user with role TEACHER.
      operationId: createCohort
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - cohort
      summary: updates cohort
      description: Creates list of users with given input array
      operationId: asd
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CohortAddUser'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  schemas:
    User:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            id:
              type: integer
              format: int64
            username:
              type: string
            firstName:
              type: string
            lastName:
              type: string
            email:
              type: string
            password:
              type: string
            phone:
              type: string
            userStatus:
              type: integer
              description: User Status
              format: int32
    Post:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            post:
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
    Posts:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            posts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  content:
                    type: string
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                      cohortId:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      bio:
                        type: string
                      githubUrl:
                        type: string
                      role:
                        type: string
    Cohort:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            cohort:
              properties:
                id:
                  type: integer
                  format: int64
    CohortAddUser:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            user:
              properties:
                cohort_id:
                  type: integer
                  format: int64
    Error:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            error:
              type: string
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'