openapi: 3.0.3
info:
  title: Team-Dev-Api-Spec
  description: |-
  version: 1.0.0

servers:
  - url: http://localhost:4000
tags:
  - name: user
  - name: post
  - name: cohort
  - name: log
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: Create new user
      operationId: createUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
       '201':
        
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUser'
    get:
      tags:
        - user
      summary: Get all users by first name if provided
      description: ''
      operationId: getAllUsers
      security:
        - bearerAuth: []
      parameters:
        - name: first_name
          in: query
          description: Search all users by first name if provided
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      tags:
        - user
      summary: Localhost Login
      description: ''
      operationId: loginUser
      requestBody:
        description: User login information 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/loginRes'
                
        '400':
          description: Invalid username/password supplied
  
  /user/{id}:
    get:
      tags:
        - user
      summary: Get user by user id
      description: ''
      operationId: getUserByID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - user
      summary: updates cohort
      description: Creates list of users with given input array
      operationId: asd
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      requestBody:
        description: Cohort Id to add user to
        content:
          application/json:
            schema:
              type: object
              properties:
                cohort_id:
                  type: integer
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CohortAddUser'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /log:
    post:
      tags:
       - log
      summary: Create log
      description: This can only be done by authorized user.
      operationId: createLog
      security:
        - bearerAuth: []
      requestBody:
        description: Created log object
        content:
         application/json:
          schema:
            type: object
            properties:
              date: 
                type: string
              cohort_id:
                type: integer
              lines:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /post:
    post:
      tags:
        - post
      summary: Create post
      description: This can only be done by the logged in user.
      operationId: createPost
      security:
        - bearerAuth: []
      requestBody:
        description: Created post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - post
      summary: gets all posts
      description: get all posts
      operationId: getPosts
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /cohort:
    post:
      tags:
        - cohort
      summary: Create cohort
      description: This can only be done by the logged in user with role TEACHER.
      operationId: createCohort
      security:
        - bearerAuth: []
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT 
  schemas:
    Post:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            post:
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        biography:
          type: string
        github_url:
          type: string
    Posts:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            posts:
              type: array
              items:
                type: object
                properties:
                  id:
                    type: integer
                    format: int64
                  content:
                    type: string
                  author:
                    type: object
                    properties:
                      id:
                        type: integer
                      cohortId:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      email:
                        type: string
                      bio:
                        type: string
                      githubUrl:
                        type: string
                      role:
                        type: string
    Cohort:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            cohort:
              properties:
                id:
                  type: integer
                  format: int64
    CohortAddUser:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            user:
              properties:
                cohort_id:
                  type: integer
                  format: int64
    CreatedUser:
          type: object 
          properties: 
            status:
              type: string
              example: success
            data:
             properties:
              user:
               properties:
                 id:
                  type: integer
                 cohort_id:
                  type: integer
                 role:
                  type: string
                 first_name:
                  type: string
                 last_name:
                  type: string
                 email:
                  type: string
                 biography:
                  type: string
                 github_url:
                  type: string
    login:
      type: object 
      properties:
        email:
          type: string 
        password:
          type: string
     
    loginRes:
      type: object 
      properties:
        status: 
          type: string
        data:
         properties:
          token:
           type: string
          user:
           properties:
              id: 
               type: integer
              cohort_id: 
               type: integer 
              role:
               type: string
              first_name:
               type: string
              last_name:
                type: string
              email:
                type: string
              biography:
                type: string
              github_url:
                type: string

    Error:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            error:
              type: string
              
    Log:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            log:
              properties:
                id:
                  type: integer
                cohort_id:
                  type: integer
                date:
                  type: string
                author:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      content:
                        type: string
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'
openapi: 3.0.3
info:
  title: Team-Dev-Api-Spec
  description: |-
  version: 1.0.0

servers:
  - url: http://localhost:4000
tags:
  - name: user
  - name: post
  - name: cohort
  - name: log
paths:
  /user:
    post:
      tags:
        - user
      summary: Create user
      description: Create new user
      operationId: createUser
      requestBody:
        description: User registration details
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
      responses:
       '201':
        
          description: Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreatedUser'
    get:
      tags:
        - user
      summary: Get all users by first name if provided
      description: ''
      operationId: getAllUsers
      security:
        - bearerAuth: []
      parameters:
        - name: first_name
          in: query
          description: Search all users by first name if provided
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /login:
    post:
      tags:
        - user
      summary: Localhost Login
      description: ''
      operationId: loginUser
      requestBody:
        description: User login information 
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
               $ref: '#/components/schemas/loginRes'
                
        '400':
          description: Invalid username/password supplied
  
  /user/{id}:
    get:
      tags:
        - user
      summary: Get user by user id
      description: ''
      operationId: getUserByID
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      responses:
        '200':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '400':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        '404':
          description: successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    patch:
      tags:
        - user
      summary: updates cohort
      description: Creates list of users with given input array
      operationId: asd
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The name that needs to be fetched. Use user1 for testing. '
          required: true
          schema:
            type: string
      requestBody:
        description: Cohort Id to add user to
        content:
          application/json:
            schema:
              type: object
              properties:
                cohort_id:
                  type: integer
      responses:
        '201':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CohortAddUser'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /log:
    post:
      tags:
       - log
      summary: Create log
      description: This can only be done by authorized user.
      operationId: createLog
      security:
        - bearerAuth: []
      requestBody:
        description: Created log object
        content:
         application/json:
          schema:
            type: object
            properties:
              date: 
                type: string
              cohort_id:
                type: integer
              lines:
                  type: array
                  items:
                    type: object
                    properties:
                      content:
                        type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Log'
        '401':
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error' 
  /post:
    post:
      tags:
        - post
      summary: Create post
      description: This can only be done by the logged in user.
      operationId: createPost
      security:
        - bearerAuth: []
      requestBody:
        description: Created post object
        content:
          application/json:
            schema:
              type: object
              properties:
                content:
                  type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    get:
      tags:
        - post
      summary: gets all posts
      description: get all posts
      operationId: getPosts
      security:
        - bearerAuth: []
      responses: 
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'          
        '401':
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /post/{id}/like:
    post:
      tags:
        - post
      summary: Like post
      description: This can only be done by the logged in user.
      operationId: likePost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The id of the post that is being liked.'
          required: true
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LikePost'
        404:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        409:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  /post/{id}/:
    delete:
      tags:
        - post
      summary: Delete post
      description: This can only be done by the logged in user.
      operationId: deletePost
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: 'The id of the post that is being deleted.'
          required: true
          schema:
            type: string
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeletePost'
        403:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
        404:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
    
  /cohort:
    post:
      tags:
        - cohort
      summary: Create cohort
      description: This can only be done by the logged in user with role TEACHER.
      operationId: createCohort
      security:
        - bearerAuth: []
      responses:
        201:
          description: success
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Cohort'
        400:
          description: fail
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
components:
  securitySchemes:
      bearerAuth:
        type: http
        scheme: bearer
        bearerFormat: JWT 
  schemas:
    Post:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            post:
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
    DeletePost:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            deletedPost:
              properties:
                id:
                  type: integer
                  format: int64
                content:
                  type: string
                userId:
                  type: integer
                  format: int64
                createdAt:
                  type: string
                  format: date-time
                updatedAt:
                  type: string
                  format: date-time
            deletedComments:
              type: object
              properties:
                count:
                  type: integer

    LikePost:
      type: object
      properties:
        status:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              userId:
                type: integer
                format: int64
              postId:
                type: integer
                format: int64
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              user:
                type: object
                properties:
                  email:
                    type: string
                  id:
                    type: integer
                  cohortId:
                    type: integer
                  role:
                    type: string
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      bio:
                        type: string
                      githubUrl:
                        type: string
                      profileImageUrl:
                        type: string 
    User:
      type: object
      properties:
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        password:
          type: string
        biography:
          type: string
        github_url:
          type: string
    Posts:
      type: object
      properties:
        status:
          type: string
        data:
          type: array
          items:
            type: object
            properties:
              id:
                type: integer
                format: int64
              content:
                type: string
              userId:
                type: integer
              createdAt:
                type: string
                format: date-time
              updatedAt:
                type: string
                format: date-time
              user:
                type: object
                properties:
                  email:
                    type: string
                  id:
                    type: integer
                  cohortId:
                    type: integer
                  role:
                    type: string
                  profile:
                    type: object
                    properties:
                      id:
                        type: integer
                      userId:
                        type: integer
                      firstName:
                        type: string
                      lastName:
                        type: string
                      bio:
                        type: string
                      githubUrl:
                        type: string
                      profileImageUrl:
                        type: string
              likes:
                type: array
                items:
                  type: object
                  properties:
                    userId:
                      type: integer
                      format: int64
                    postId:
                      type: integer
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        email:
                          type: string
                        id:
                          type: integer
                        cohortId:
                          type: integer
                        role:
                          type: string
                        profile:
                          type: object
                          properties:
                            id:
                              type: integer
                            userId:
                              type: integer
                            firstName:
                              type: string
                            lastName:
                              type: string
                            bio:
                              type: string
                            githubUrl:
                              type: string
                            profileImageUrl:
                              type: string
              comments:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                    content:
                      type: string
                    userId:
                      type: integer
                      format: int64
                    postId:
                      type: integer
                    createdAt:
                      type: string
                      format: date-time
                    updatedAt:
                      type: string
                      format: date-time
                    user:
                      type: object
                      properties:
                        email:
                          type: string
                        id:
                          type: integer
                        cohortId:
                          type: integer
                        role:
                          type: string
                        profile:
                          type: object
                          properties:
                            id:
                              type: integer
                            userId:
                              type: integer
                            firstName:
                              type: string
                            lastName:
                              type: string
                            bio:
                              type: string
                            githubUrl:
                              type: string
                            profileImageUrl:
                              type: string
                    
    Cohort:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            cohort:
              properties:
                id:
                  type: integer
                  format: int64
    CohortAddUser:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            user:
              properties:
                cohort_id:
                  type: integer
                  format: int64
    CreatedUser:
          type: object 
          properties: 
            status:
              type: string
              example: success
            data:
             properties:
              user:
               properties:
                 id:
                  type: integer
                 cohort_id:
                  type: integer
                 role:
                  type: string
                 first_name:
                  type: string
                 last_name:
                  type: string
                 email:
                  type: string
                 biography:
                  type: string
                 github_url:
                  type: string
    login:
      type: object 
      properties:
        email:
          type: string 
        password:
          type: string
     
    loginRes:
      type: object 
      properties:
        status: 
          type: string
        data:
         properties:
          token:
           type: string
          user:
           properties:
              id: 
               type: integer
              cohort_id: 
               type: integer 
              role:
               type: string
              first_name:
               type: string
              last_name:
                type: string
              email:
                type: string
              biography:
                type: string
              github_url:
                type: string

    Error:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            error:
              type: string
              
    Log:
      type: object
      properties:
        status:
          type: string
        data:
          properties:
            log:
              properties:
                id:
                  type: integer
                cohort_id:
                  type: integer
                date:
                  type: string
                author:
                  type: object
                  properties:
                    id:
                      type: integer
                    first_name:
                      type: string
                    last_name:
                      type: string
                lines:
                  type: array
                  items:
                    type: object
                    properties:
                      id:
                        type: integer
                      content:
                        type: string
  requestBodies:
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'