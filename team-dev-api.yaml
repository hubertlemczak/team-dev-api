openapi: 3.0.0
info:
  title: Cinema Booking API - Core Criteria
  version: 0.0.1
servers:
  - url: http://localhost:4040
basePath: /
schemes:
  - http
paths:
  /movies:
    get:
      summary: Retrieve a list of movies
      description: The screenings related to them should be included in the response data.
      tags:
        - movies
      responses:
        200:
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  movies:
                    type: array
                    items:
                      $ref: '#/components/schemas/Movie'
    post:
      summary: Create a movie
      tags:
        - movies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoviePost"
      responses:
        201:
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: object
                    $ref: "#/components/schemas/Movie"
  /movies/{id}:
    get:
      summary: Retrieve a movie by ID
      description: The screenings related to it should be included in the response body.
      tags:
        - movies
      responses:
        200:
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: object
                    $ref: "#/components/schemas/Movie"
    put:
      summary: Update a movie
      tags:
        - movies
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/MoviePost"
      responses:
        201:
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  movie:
                    type: object
                    $ref: "#/components/schemas/Movie"
  /customers/{id}:
    put:
      summary: Update a customer
      description: The customer's contact details should be included in the response data.
      tags:
        - customers
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/CustomerPost"
      responses:
        201:
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  customer:
                    type: object
                    $ref: "#/components/schemas/Customer"
  /screens:
    post:
      summary: Create a screen
      tags:
        - screens
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/ScreenPost"
      responses:
        201:
          description: OK
          content: 
            application/json:
              schema:
                type: object
                properties:
                  screen:
                    type: object
                    $ref: "#/components/schemas/Screen"

components:
  schemas:
    Movie: 
      type: object
      properties:
        id: 
          type: integer
        title:
          type: string
        runtimeMins:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
        screenings:
          type: array
          items:
            $ref: '#/components/schemas/Screening'
    MoviePost: 
      type: object
      properties:
        title:
          type: string
        runtimeMins:
          type: integer
    Screening: 
      type: object
      properties:
        id:
          type: integer
        movieId:
          type: integer
        screenId:
          type: integer
        startsAt:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    ScreeningPost: 
      type: object
      properties:
        movieId:
          type: integer
        screenId:
          type: integer
        startsAt:
          type: string
    Customer: 
      type: object
      properties:
        id:
          type: integer
        name:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
        contact:
          type: object
          $ref: '#/components/schemas/Contact'
    CustomerPost:
      type: object
      properties:
        name:
          type: string
    Contact: 
      type: object
      properties:
        id:
          type: integer
        customerId:
          type: integer
        phone:
          type: string
        email:
          type: string
        createdAt:
          type: string
        updatedAt:
          type: string
    ContactPost: 
      type: object
      properties:
        phone:
          type: string
        email:
          type: string
    Screen: 
      type: object
      properties:
        id:
          type: integer
        number:
          type: integer
        createdAt:
          type: string
        updatedAt:
          type: string
    ScreenPost: 
      type: object
      properties:
        number:
          type: integer
